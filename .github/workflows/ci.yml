name: CI

on:
  merge_group:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# OIDC access to S3 caching bucket
permissions:
  id-token: write
  contents: read

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SOLC_VERSION: 0.8.24
  RISC0_VERSION: 2.3.1
  RISC0_TOOLCHAIN_VERSION: 1.88.0

jobs:
  cargo-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: risc0/risc0/.github/actions/rustup@main
      - uses: risc0/risc0/.github/actions/sccache@main
      - name: cargo fmt kailua
        run: |
          cargo fmt --all --check
      - name: cargo fmt kailua-fpvm-kona
        run: |
          cargo fmt --all --check --manifest-path build/risczero/kona/Cargo.toml
      - name: cargo fmt kailua-fpvm-hokulea
        run: |
          cargo fmt --all --check --manifest-path build/risczero/hokulea/Cargo.toml

  cargo-clippy:
    strategy:
      matrix:
        include:
          - os: Linux
            feature: default
    runs-on: [ self-hosted, prod, "${{ matrix.os }}" ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: risc0/risc0/.github/actions/rustup@main
      - uses: risc0/risc0/.github/actions/sccache@main
      - name: Install svm-rs
        uses: risc0/cargo-install@b9307573043522ab0d3e3be64a51763b765b52a4
        with:
          crate: svm-rs
          version: '0.5.17'
      - name: Install solc
        continue-on-error: true
        run: svm install $SOLC_VERSION
      - run: svm use $SOLC_VERSION
      - name: Install Foundry toolchain
        shell: bash
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          echo "$HOME/.foundry/bin" >> "$GITHUB_PATH"
      - name: Install Foundry 1.0.0
        continue-on-error: true
        run: foundryup -b v1.0.0
      - name: cargo clippy kailua
        run: cargo clippy --locked --workspace --all --all-targets
        env:
          RUSTFLAGS: -Dwarnings
          RISC0_SKIP_BUILD: true
          RISC0_SKIP_BUILD_KERNEL: true
      - name: cargo clippy kailua-fpvm-kona
        run: cargo clippy --manifest-path build/risczero/kona/Cargo.toml --locked --workspace --all --all-targets --all-features
        env:
          RUSTFLAGS: -Dwarnings
      - name: cargo clippy kailua-fpvm-hokulea
        run: cargo clippy --manifest-path build/risczero/hokulea/Cargo.toml --locked --workspace --all --all-targets --all-features
        env:
          CANOE_IMAGE_ID: 0x
          RUSTFLAGS: -Dwarnings

  cargo-test:
    strategy:
      matrix:
        include:
          - os: Linux
            feature: default
    runs-on: [ self-hosted, prod, docker, "${{ matrix.os }}" ]
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Fetch optimism devnet
        uses: actions/checkout@v4
        with:
          repository: 'ethereum-optimism/optimism'
          ref: 'v1.9.1'
          path: 'optimism'
          submodules: recursive
          fetch-depth: '1'
      - name: Install Go 1.22.6
        uses: actions/setup-go@v5
        with:
          go-version: '=1.22.6'
      - name: Install Python 3.13.1
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.1'
      - uses: risc0/risc0/.github/actions/rustup@main
      - uses: risc0/risc0/.github/actions/sccache@main
      - name: Install rzup
        env:
          ENV_PATH: test
        shell: bash
        run: |
          curl -L https://risczero.com/install | bash
          echo "$HOME/.risc0/bin" >> $GITHUB_PATH
      - name: Install RISC Zero toolchain
        shell: bash
        run: rzup install
      - name: Install svm-rs
        uses: risc0/cargo-install@b9307573043522ab0d3e3be64a51763b765b52a4
        with:
          crate: svm-rs
          version: '0.5.17'
      - name: Install solc
        continue-on-error: true
        run: svm install $SOLC_VERSION
      - run: svm use $SOLC_VERSION
      - name: Install Foundry toolchain
        shell: bash
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          echo "$HOME/.foundry/bin" >> "$GITHUB_PATH"
      - name: Install Foundry 1.0.0
        continue-on-error: true
        run: foundryup -b v1.0.0
      - name: cargo test kailua
        run: cargo test --locked --workspace --all --all-targets -F devnet -F prove -F rebuild-fpvm -- --test-threads 1

  cargo-llvm-cov:
    strategy:
      matrix:
        include:
          - os: Linux
            feature: default
    runs-on: [ self-hosted, prod, "${{ matrix.os }}" ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: risc0/risc0/.github/actions/rustup@main
      - uses: risc0/risc0/.github/actions/sccache@main
      - name: Install nightly toolchain
        uses: risc0/risc0/.github/actions/rustup@main
        with:
          toolchain: nightly
      - name: Install svm-rs
        uses: risc0/cargo-install@b9307573043522ab0d3e3be64a51763b765b52a4
        with:
          crate: svm-rs
          version: '0.5.17'
      - name: Install solc
        continue-on-error: true
        run: svm install $SOLC_VERSION
      - run: svm use $SOLC_VERSION
      - name: Install Foundry toolchain
        shell: bash
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          echo "$HOME/.foundry/bin" >> "$GITHUB_PATH"
      - name: Install Foundry 1.0.0
        continue-on-error: true
        run: foundryup -b v1.0.0
      - name: Install cargo-llvm-cov
        uses: risc0/cargo-install@b9307573043522ab0d3e3be64a51763b765b52a4
        with:
          crate: cargo-llvm-cov
      - name: kailua-kona coverage
        run: cargo +nightly llvm-cov -p kailua-kona --branch --fail-uncovered-functions 0 --fail-uncovered-lines 4

  forge-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: risc0/risc0/.github/actions/rustup@main
      - uses: risc0/risc0/.github/actions/sccache@main
      - name: Install svm-rs
        uses: risc0/cargo-install@b9307573043522ab0d3e3be64a51763b765b52a4
        with:
          crate: svm-rs
          version: '0.5.17'
      - name: Install solc
        continue-on-error: true
        run: svm install $SOLC_VERSION
      - run: svm use $SOLC_VERSION
      - name: Install Foundry toolchain
        shell: bash
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          echo "$HOME/.foundry/bin" >> "$GITHUB_PATH"
      - name: Install Foundry 1.0.0
        continue-on-error: true
        run: foundryup -b v1.0.0
      - name: Run forge fmt
        run:  forge fmt --check --root crates/contracts/foundry

  forge-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: risc0/risc0/.github/actions/rustup@main
      - uses: risc0/risc0/.github/actions/sccache@main
      - name: Install svm-rs
        uses: risc0/cargo-install@b9307573043522ab0d3e3be64a51763b765b52a4
        with:
          crate: svm-rs
          version: '0.5.17'
      - name: Install solc
        continue-on-error: true
        run: svm install $SOLC_VERSION
      - run: svm use $SOLC_VERSION
      - name: Install Foundry toolchain
        shell: bash
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          echo "$HOME/.foundry/bin" >> "$GITHUB_PATH"
      - name: Install Foundry 1.0.0
        continue-on-error: true
        run: foundryup -b v1.0.0
      - name: Run forge test
        run:  forge test --root crates/contracts/foundry

  forge-coverage:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: risc0/risc0/.github/actions/rustup@main
      - uses: risc0/risc0/.github/actions/sccache@main
      - name: Install svm-rs
        uses: risc0/cargo-install@b9307573043522ab0d3e3be64a51763b765b52a4
        with:
          crate: svm-rs
          version: '0.5.17'
      - name: Install solc
        continue-on-error: true
        run: svm install $SOLC_VERSION
      - run: svm use $SOLC_VERSION
      - name: Install Foundry toolchain
        shell: bash
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          echo "$HOME/.foundry/bin" >> "$GITHUB_PATH"
      - name: Install Foundry 1.0.0
        continue-on-error: true
        run: foundryup -b v1.0.0
      - name: Run forge coverage
        id: coverage
        run: |
          {
          echo 'COVERAGE<<EOF'
          forge coverage --root crates/contracts/foundry --no-match-coverage "(src/vendor|test/)" | grep "% ("
          echo EOF
          }  >> "$GITHUB_OUTPUT"
      - name: Report Coverage
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Forge code coverage:\n| File | Lines | Statements | Branches | Functions |\n|--|--|--|--|--|\n${{ steps.coverage.outputs.COVERAGE }}\n`
            })
